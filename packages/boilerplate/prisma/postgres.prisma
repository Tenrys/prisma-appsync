datasource db {
    provider = "postgres"
    url      = env("DATABASE_URL")
}

generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

generator appsync {
    provider = "prisma-appsync"
}

/// @gql(fields: { passwordHash: null }, mutations: null, subscriptions: null)
model User {
    id           Int       @id @default(autoincrement())
    email        String    @unique
    passwordHash String
    role         Role?     @default(USER)
    posts        Post[]
    comments     Comment[]
    createdAt    DateTime? @default(now())
}

enum Role {
    USER
    ADMIN
}

/// @gql(mutations: { delete: null, deleteMany: null })
/// @gql(scalars: { source: "AWSURL" })
model Post {
    id        Int       @id @default(autoincrement())
    title     String    @db.VarChar(255)
    source    String?   @db.VarChar(155)
    author    User?     @relation(fields: [authorId], references: [id])
    authorId  Int?
    comments  Comment[]
    views     Int?      @default(1)
    status    Status?   @default(DRAFT)
    updatedAt DateTime  @updatedAt
    createdAt DateTime? @default(now())
}

enum Status {
    DRAFT
    PUBLISHED
    DELETED
}

model Comment {
    message   String
    author    User     @relation(fields: [authorId], references: [id])
    authorId  Int
    post      Post     @relation(fields: [postId], references: [id])
    postId    Int
    updatedAt DateTime @updatedAt
    createdAt DateTime @default(now())

    @@id([authorId, postId])
    @@index([authorId, postId])
}
